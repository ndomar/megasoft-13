var cardsView;
var groupsView;
var cardsContent;
var groupsContent;
var imageTiled;
var imageGrid;
var shownCards = false;
var shownGroups = false;
var cardsThumbnail;
var groupsThumbnail;
var cardsList;
var groupsList;

function init() {
	initParams();
	initCardsView();
	initGroupsView();
	initButtons();
	initTrash();
}

function initCardsView() {
	$(cardsThumbnail).sortable({
		revert: 'invalid',
		items: ".card"
	});
		$(cardsList).sortable({
		revert: 'invalid',
		items: "tr"
	});
	$(cardsView).draggable({
		handle: '#cards-tag',
		axis: 'x',
		drag: function() {
				var difference = cardsView.offsetLeft - groupsView.offsetLeft;
				var left = parseInt($(cardsView).css('left'));
				if (difference < 24)
					$(groupsView).css('left', left - 24);
				width = wrapper.offsetWidth - cardsView.offsetLeft;
				$(cardsContent).css('width', width-80);
				width = cardsView.offsetLeft - groupsView.offsetLeft;
					$(groupsContent).css('width', width-80);
			},
		containment: [144,100,cardsView.offsetLeft,100000]
	});
	width = wrapper.offsetWidth - cardsView.offsetLeft;
	$(cardsContent).css('width', width-80);
}

function initGroupsView() {
	$(groupsThumbnail).sortable({
		revert: 'invalid',
		items: ".group"
	});
	$(groupsList).sortable({
		revert: 'invalid',
		items: "tr"
	});
	$(groupsView).draggable({
		handle: '#groups-tag',
		axis: 'x',
		drag: function() {
				var difference =cardsView.offsetLeft - groupsView.offsetLeft;
				var left = parseInt($(groupsView).css('left'));
				if (difference < 24)
					$(cardsView).css('left', left + 23);
					width = cardsView.offsetLeft - groupsView.offsetLeft;
						$(groupsContent).css('width', width-80);
			},
		containment: [120,100,groupsView.offsetLeft,100000]
	});
	width = wrapper.offsetWidth - groupsView.offsetLeft;
	$(groupsContent).css('width', width-80);
}

function initParams() {
	cardsView = $('#cards-view')[0];
	groupsView = $('#groups-view')[0];
	cardsContent = $('#cards-content')[0];
	groupsContent = $('#groups-content')[0];
	cardsList = $('#cards-list')[0];
	cardsThumbnail = $('#cards-thumbnail')[0];
	groupsList = $('#groups-list')[0];
	groupsThumbnail = $('#groups-thumbnail')[0];
	wrapper = $('#wrapper')[0];
}

function initButtons() {
	imageTiled = new Image(100,100);
	imageTiled.src = '<%= asset_path "View_button.png" %>';
	imageGrid = new Image(100,100);
	imageGrid.src = '<%= asset_path "grid_View_button.png" %>';
	$(cardsView).find('.view-button').click(function() {
		if (!shownCards){
			$(this).children('img').attr('src', imageTiled.src);
			$(cardsThumbnail).hide();
			$(cardsList).show();
		}	else {
			$(this).children('img').attr('src', imageGrid.src);
			$(cardsList).hide();
			$(cardsThumbnail).show();
		}
		shownCards = !shownCards;
	});
	$(groupsView).find('.view-button').click(function() {
		if (!shownGroups){
			$(this).children('img').attr('src', imageTiled.src);
			$(groupsThumbnail).hide();
			$(groupsList).show();
		}	else {
			$(this).children('img').attr('src', imageGrid.src);
			$(groupsList).hide();
			$(groupsThumbnail).show();
		}
		shownGroups = !shownGroups;
	});

	$(cardsView).find('.add-button').click(function() {
		$('#main-group').hide(200, function(){
			$('#main-card').show(200);
		});
	});
	$(groupsView).find('.add-button').click(function() {
		$('#main-card').hide(200, function(){
			$('#main-group').show(200);
		});
	});
	$('#submit-button').click(save);
}

var tempClass;

function initTrash() {
	$('#trash').droppable({
		accept: "li,tr",
		over: function(event, ui) {
			tempClass = $(ui).attr('class');
			$(ui.helper).addClass('crumpled');
			$(ui.helper).children().hide();
		},
		revert: 'invalid',
		out: function(event, ui) {
			$(ui.helper).addClass(tempClass);
			$(ui.helper).removeClass('crumpled');
			$(ui.helper).children().show();
		},
		drop: function( event, ui ) {
			deleteThmb(ui);
		}
	});
}

function deleteThmb(ui) {
	var url;
	if ($(ui.helper).hasClass('card')){
		url = '/cardsorts/' + id  + '/delete_card/' + $(ui.helper).attr('id');
	} else {
		url = '/cardsorts/' + id + '/delete_group/' + $(ui.helper).attr('id');
	}
	$.ajax({
		'url': url,
		method: 'post'
	});
	$(ui.helper).fadeOut();
}

function save(){
	if ($(cardsView).find('.card:visible').length < 1 || $(groupsView).find('.group:visible').length < 1){
		bootbox.alert('يجب أن لديك مجموعة واحدة على الأقل وبطاقة واحدة');
		return false;
	}
	
	else
		window.location.href = '/cardsorts/invitations/'+id;
}

